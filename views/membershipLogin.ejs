<!DOCTYPE html>

<html lang="ar" dir="rtl">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>طلب عضوية / تسجيل دخول</title>
  <style>
    body {
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      direction: rtl;
      margin: 30px;
      background: url('/images/2023.png');
      background-size: cover;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
      color: #111;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      overflow-x: hidden;
    }

    /* Stars animation */
    .stars {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      pointer-events: none;
      z-index: 0;
    }

    .star {
      position: absolute;
      background: white;
      border-radius: 50%;
      opacity: 0.8;
      animation: twinkle 2s infinite alternate;
    }

    @keyframes twinkle {
      0% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    /* Birds animation */
    .birds {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      pointer-events: none;
      z-index: 1;
    }

    .bird {
      position: absolute;
      width: 48px;
      height: 32px;
      opacity: 0.85;
      animation: fly linear infinite;
    }

    .bird svg {
      width: 100%;
      height: 100%;
      display: block;
    }

    /* Each bird will have its own animation duration and delay via JS */
    @keyframes fly {
      0% {
        left: -60px;
        top: var(--start-top, 10vh);
        transform: scaleX(1) scale(var(--scale, 1));
      }

      100% {
        left: 100vw;
        top: var(--end-top, 30vh);
        transform: scaleX(1) scale(var(--scale, 1));
      }
    }

    /* Suns animation */
    .suns {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      pointer-events: none;
      z-index: 2;
    }

    .sun {
      position: absolute;
      width: 80px;
      height: 80px;
      border-radius: 50%;
      background: radial-gradient(circle at 60% 40%, #fffde4 0%, #ffe066 60%, #ffd700 100%);
      box-shadow: 0 0 60px 20px #ffe06688;
      opacity: 0.85;
      animation: sun-move 20s linear infinite alternate;
    }

    @keyframes sun-move {
      0% {
        top: 0vh;
        left: 0vw;
      }

      25% {
        top: 10vh;
        left: 25vw;
      }

      50% {
        top: 5vh;
        left: 50vw;
      }

      75% {
        top: 10vh;
        left: 75vw;
      }

      100% {
        top: 0vh;
        left: 100vw;
      }
    }

    /* Responsive: reduce sun size on mobile */
    @media (max-width: 576px) {
      .sun {
        width: 48px;
        height: 48px;
      }
    }

    .container {
      max-width: 700px;
      width: 100%;
      background: transparent;
      padding: 48px 40px 56px 40px;
      border-radius: 28px;
      box-shadow: 0 12px 40px 0 rgba(34, 197, 94, 0.13), 0 2px 8px 0 rgba(0, 0, 0, 0.08);
      transition: box-shadow 0.4s, transform 0.4s;
      backdrop-filter: blur(6px);
      border: 1.5px solid #bbf7d0;
      margin-top: 40px;
    }

    .container:hover {
      box-shadow: 0 24px 80px 0 rgba(34, 197, 94, 0.18), 0 4px 16px 0 rgba(0, 0, 0, 0.10);
      transform: translateY(-2px) scale(1.01);
    }

    .button-group {
      display: flex;
      justify-content: flex-start;
      margin-bottom: 32px;
      gap: 18px;
      user-select: none;
    }

    .button-group button {
      background: #f0fdf4;
      color: #111;
      border: 2px solid #22c55e;
      padding: 15px 36px;
      cursor: pointer;
      border-radius: 14px;
      font-size: 22px;
      font-weight: 600;
      box-shadow: 0 2px 8px 0 rgba(34, 197, 94, 0.07);
      transition: background 0.3s, color 0.3s, border 0.3s, transform 0.3s;
      flex-shrink: 0;
      letter-spacing: 0.5px;
    }

    .button-group button:hover,
    .button-group button.active {
      background: #bbf7d0;
      color: #111;
      border-color: #16a34a;
      box-shadow: 0 0 0 2px #22c55e33;
      transform: translateY(-2px) scale(1.04);
    }

    .button-group button.active {
      cursor: default;
      transform: none;
    }

    form {
      width: 100%;
    }

    .form-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 22px;
      gap: 22px;
      flex-wrap: wrap;
    }

    .form-group {
      flex: 1 1 18%;
      display: flex;
      flex-direction: column;
      min-width: 140px;
    }

    label {
      font-size: 17px;
      margin-bottom: 10px;
      color: #166534;
      font-weight: 600;
      user-select: none;
      letter-spacing: 0.2px;
    }

    input[type="text"],
    input[type="email"],
    input[type="date"],
    select,
    input[type="file"],
    input[type="password"] {
      width: 100%;
      padding: 13px 16px;
      box-sizing: border-box;
      border: 2px solid #bbf7d0;
      border-radius: 10px;
      font-size: 17px;
      font-weight: 500;
      color: #111;
      background: rgba(255, 255, 255, 0.92);
      box-shadow: 0 1px 4px 0 rgba(34, 197, 94, 0.04);
      transition: border-color 0.3s, box-shadow 0.3s, background-color 0.3s;
      font-family: inherit;
    }

    input[type="text"]::placeholder,
    input[type="email"]::placeholder {
      color: #888;
      font-style: italic;
      opacity: 0.8;
    }

    input[type="text"]:focus,
    input[type="email"]:focus,
    input[type="date"]:focus,
    select:focus,
    input[type="file"]:focus,
    input[type="password"]:focus {
      border-color: #22c55e;
      background: #f0fdf4;
      box-shadow: 0 0 0 2px #bbf7d0;
      outline: none;
    }

    select {
      appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg width='16' height='16' fill='gray' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4 6l4 4 4-4' stroke='%23166c34' stroke-width='2' fill='none'/%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: left 12px center;
      background-size: 18px 18px;
      padding-left: 38px;
    }

    .checkbox-group {
      margin-top: 18px;
      font-size: 17px;
      user-select: none;
    }

    .checkbox-group label {
      font-weight: 600;
      display: flex;
      align-items: center;
      color: #166534;
      cursor: pointer;
      gap: 10px;
    }

    .checkbox-group input[type="checkbox"] {
      margin-left: 12px;
      transform: scale(1.3);
      cursor: pointer;
      accent-color: #22c55e;
      transition: box-shadow 0.3s;
      border-radius: 5px;
    }

    .checkbox-group input[type="checkbox"]:focus {
      box-shadow: 0 0 0 2px #bbf7d0;
      outline: none;
    }

    .checkbox-group input[type="checkbox"]:checked {
      accent-color: #22c55e;
    }

    .pledge-text {
      margin-top: 22px;
      font-size: 15.5px;
      line-height: 1.7;
      color: #222;
      font-style: italic;
      user-select: text;
      border-left: 4px solid #22c55e;
      padding-left: 15px;
      background: #f0fdf4;
      border-radius: 8px;
    }

    .submit-btn {
      margin-top: 38px;
      background: linear-gradient(145deg, #22c55e, #bbf7d0);
      color: #111;
      border: none;
      padding: 18px 40px;
      font-size: 23px;
      font-weight: 700;
      border-radius: 14px;
      cursor: pointer;
      box-shadow: 0 2px 8px 0 rgba(34, 197, 94, 0.09);
      transition: background 0.3s, color 0.3s, transform 0.3s;
      user-select: none;
      width: 100%;
      letter-spacing: 0.5px;
    }

    .submit-btn:hover {
      background: linear-gradient(145deg, #bbf7d0, #22c55e);
      color: #111;
      transform: scale(1.04);
    }

    @media (max-width: 992px) {
      .container {
        padding: 32px 18px 36px 18px;
      }

      .form-row {
        flex-wrap: wrap;
        gap: 18px;
      }

      .form-group {
        flex: 1 1 45%;
      }
    }

    @media (max-width: 576px) {
      .container {
        padding: 18px 7px 22px 7px;
        border-radius: 13px;
      }

      .form-group {
        flex: 1 1 100%;
      }

      .button-group {
        flex-direction: column;
        gap: 12px;
      }

      .button-group button {
        font-size: 19px;
        padding: 13px 14px;
        border-radius: 10px;
      }

      .submit-btn {
        font-size: 19px;
        padding: 13px 10px;
      }
    }
  </style>
  <!-- Animated stars, birds, and suns containers -->
</head>

<body>
  <div class="stars"></div>
  <div class="birds"></div>
  <div class="suns">
  </div>
  <div class="container" aria-label="نموذج طلب عضوية وتسجيل دخول">
    <div class="button-group" role="tablist" aria-label="اختيار بين طلب عضوية أو تسجيل دخول">
      <% if (typeof message !=='undefined' ) { %>
        <p style="color: #22c55e; font-weight: bold" role="alert">
          <%= message %>
        </p>
        <% } %>
          <% if (typeof error !=='undefined' ) { %>
            <p style="color: #dc2626; font-weight: bold" role="alert">
              <%= error %>
            </p>
            <% } %>
              <button id="membershipBtn" class="active" type="button" role="tab" aria-selected="true"
                aria-controls="membershipForm" tabindex="0">
                طلب عضوية
              </button>
              <button id="loginBtn" type="button" role="tab" aria-selected="false" aria-controls="loginForm"
                tabindex="-1">
                تسجيل دخول
              </button>
    </div>

    <form id="membershipForm" action="/api/membership-requests" method="POST" enctype="multipart/form-data" novalidate
      role="tabpanel" aria-labelledby="membershipBtn">
      <div class="form-row">
        <div class="form-group">
          <label for="name">الاسم</label>
          <input type="text" id="name" name="name" required aria-required="true" aria-describedby="nameHelp" />
        </div>
        <div class="form-group">
          <label for="nationalIdNumber">السجل المدني</label>
          <input type="text" id="nationalIdNumber" name="nationalIdNumber" required pattern="\\d{10}"
            title="يجب أن يكون رقم السجل المدني 10 أرقام فقط" aria-required="true" />
        </div>
        <div class="form-group">
          <label for="gender">الجنس</label>
          <select id="gender" name="gender" required aria-required="true">
            <option value="">اختر الجنس</option>
            <option value="Male">ذكر</option>
            <option value="Female">أنثى</option>
            <option value="Other">آخر</option>
          </select>
        </div>
        <div class="form-group">
          <label for="birthDate">تاريخ الميلاد</label>
          <input type="date" id="birthDate" name="birthDate" required aria-required="true" />
        </div>
        <div class="form-group">
          <label for="city">المدينة</label>
          <input type="text" id="city" name="city" required aria-required="true" />
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="phoneNumber">رقم الجوال</label>
          <input type="text" id="phoneNumber" name="phoneNumber" required pattern="^966\\d{9}$"
            title="يجب أن يبدأ رقم الجوال بـ 966 ويتبعه 9 أرقام" placeholder="966xxxxxxxxx" aria-required="true" />
        </div>
        <div class="form-group">
          <label for="email">البريد الالكتروني</label>
          <input type="email" id="email" name="email" required aria-required="true" />
        </div>
        <div class="form-group">
          <label for="education">المؤهل العالي</label>
          <select id="education" name="education" required aria-required="true">
            <option value="">اختر المؤهل العالي</option>
            <option value="بكالوريوس">بكالوريوس</option>
            <option value="ماجستير">ماجستير</option>
            <option value="دكتوراه">دكتوراه</option>
            <option value="دبلوم عالي">دبلوم عالي</option>
            <option value="غير ذلك">غير ذلك</option>
          </select>
        </div>
        <div class="form-group">
          <label for="profession">المهنة</label>
          <input type="text" id="profession" name="profession" required aria-required="true" />
        </div>
        <div class="form-group">
          <label for="cv">السيرة الذاتية</label>
          <input type="file" id="cv" name="cv" accept=".pdf,.doc,.docx" aria-describedby="cvHelp" />
        </div>
      </div>

      <div class="checkbox-group">
        <label for="isEmployee">
          <input type="checkbox" id="isEmployee" name="isEmployee" />
          هل أنت موظف على الكيان؟
        </label>
      </div>

      <div class="checkbox-group">
        <label for="isSupplier">
          <input type="checkbox" id="isSupplier" name="isSupplier" />
          هل أنت مورد أو على علاقة تعاقدية بأي شكل مع الكيان؟
        </label>
      </div>

      <div class="checkbox-group pledge-text">
        <label for="pledge">
          <input type="checkbox" id="pledge" name="pledge" required aria-required="true" />
          أتعهد أنا بصفتي اسم مقدم الطلب بأنني قد أتممت ما يلزم من شروط
          استحقاقات حسب ما نصت عليه اللائحة الأساسية للجمعية حيال شروط
          الانضمام لعضوية الجمعية العمومية وأتعهد بدفع الرسوم السنوية لعضوية
          الجمعية وعل ذلك أقر
        </label>
      </div>

      <button type="submit" class="submit-btn" aria-label="إرسال طلب العضوية">
        إرسال الطلب
      </button>
    </form>

    <form id="loginForm" action="/api/members/login" method="POST" style="display: none" novalidate role="tabpanel"
      aria-labelledby="loginBtn">
      <% if (typeof error !=='undefined' ) { %>
        <p style="color: #dc2626; font-weight: bold" role="alert">
          <%= error %>
        </p>
        <% } %>
          <div class="form-row">
            <div class="form-group">
              <!-- Removed membershipNumber field -->
            </div>
            <div class="form-group">
              <label for="phoneNumberLogin">رقم الجوال</label>
              <input type="text" id="phoneNumberLogin" name="phoneNumber" required pattern="^966\\d{9}$"
                title="يجب أن يبدأ رقم الجوال بـ 966 ويتبعه 9 أرقام" placeholder="966xxxxxxxxx" aria-required="true" />
            </div>
          </div>

          <button type="submit" class="submit-btn" aria-label="تسجيل الدخول">
            تسجيل دخول
          </button>
    </form>
  </div>

  <script>
    const membershipBtn = document.getElementById("membershipBtn");
    const loginBtn = document.getElementById("loginBtn");
    const membershipForm = document.getElementById("membershipForm");
    const loginForm = document.getElementById("loginForm");

    loginBtn.addEventListener("click", () => {
      membershipBtn.classList.remove("active");
      loginBtn.classList.add("active");
      membershipBtn.setAttribute("aria-selected", "false");
      loginBtn.setAttribute("aria-selected", "true");
      membershipBtn.setAttribute("tabindex", "-1");
      loginBtn.setAttribute("tabindex", "0");

      membershipForm.style.display = "none";
      membershipForm.setAttribute("tabindex", "-1");
      loginForm.style.display = "block";
      loginForm.setAttribute("tabindex", "0");
    });

    membershipBtn.addEventListener("click", () => {
      membershipBtn.classList.add("active");
      loginBtn.classList.remove("active");
      membershipBtn.setAttribute("aria-selected", "true");
      loginBtn.setAttribute("aria-selected", "false");
      membershipBtn.setAttribute("tabindex", "0");
      loginBtn.setAttribute("tabindex", "-1");

      membershipForm.style.display = "block";
      membershipForm.setAttribute("tabindex", "0");
      loginForm.style.display = "none";
      loginForm.setAttribute("tabindex", "-1");
    });
  </script>
  <script>
    document
      .getElementById("membershipForm")
      .addEventListener("submit", function (e) {
        console.log("Membership form submitted");
      });
  </script>
  <script>
    // Script to dynamically create stars, birds, and suns for animation

    // Create stars
    const starsContainer = document.querySelector('.stars');
    const starCount = 100;

    for (let i = 0; i < starCount; i++) {
      const star = document.createElement('div');
      star.classList.add('star');
      const size = Math.random() * 2 + 1; // 1px to 3px
      star.style.width = `${size}px`;
      star.style.height = `${size}px`;
      star.style.top = `${Math.random() * 100}vh`;
      star.style.left = `${Math.random() * 100}vw`;
      star.style.animationDuration = `${Math.random() * 2 + 1}s`;
      star.style.animationDelay = `${Math.random() * 2}s`;
      starsContainer.appendChild(star);
    }

    // Create birds
    const birdsContainer = document.querySelector('.birds');
    const birdCount = 6;

    const birdSVG = `
        <svg viewBox="0 0 64 43" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false">
          <path d="M2 20c10 10 20 10 30 0" stroke="#166534" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M32 20c10 10 20 10 30 0" stroke="#166534" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      `;

    for (let i = 0; i < birdCount; i++) {
      const bird = document.createElement('div');
      bird.classList.add('bird');
      bird.style.setProperty('--start-top', `${Math.random() * 80 + 5}vh`);
      bird.style.setProperty('--end-top', `${Math.random() * 80 + 5}vh`);
      bird.style.setProperty('--scale', (Math.random() * 0.5 + 0.75).toFixed(2));
      bird.style.animationDuration = `${Math.random() * 10 + 8}s`;
      bird.style.animationDelay = `${Math.random() * 10}s`;
      bird.innerHTML = birdSVG;
      birdsContainer.appendChild(bird);
    }

    // Create suns
    const sunsContainer = document.querySelector('.suns');
    const sunCount = 3;

    for (let i = 0; i < sunCount; i++) {
      const sun = document.createElement('div');
      sun.classList.add('sun');
      sun.style.top = `${Math.random() * 80}vh`;
      sun.style.left = `${Math.random() * 100}vw`;
      sun.style.animationDuration = `${20 + Math.random() * 10}s`;
      sun.style.animationDelay = `${Math.random() * 20}s`;
      sunsContainer.appendChild(sun);
    }
  </script>
</body>

</html>