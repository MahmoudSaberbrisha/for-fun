<!DOCTYPE html>
<html lang="ar" dir="rtl">
  <head>
    <meta charset="UTF-8" />
    <title>مناقشه الجلسات</title>
    <link rel="stylesheet" href="/frontend/styles/style.css" />
    <style>
      html,
      body {
        height: 100%;
        margin: 0;
        padding: 0;
        background: #f6fff8;
        font-family: "Cairo", Arial, sans-serif;
      }
      body {
        min-height: 100vh;
        width: 100vw;
        box-sizing: border-box;
      }
      .container {
        display: flex;
        flex-direction: row;
        width: 100vw;
        min-height: 100vh;
        margin: 0;
        padding: 0;
      }
      .sidebar {
        min-width: 220px;
        background: linear-gradient(180deg, #1e7f4c 80%, #e9ffe6 100%);
        color: #fff;
        box-shadow: 2px 0 8px #0001;
        padding: 0;
      }
      .scroll-container {
        flex: 1;
        width: 100%;
        max-width: 100vw;
        min-height: 100vh;
        overflow: auto;
        border: none;
        padding: 40px 32px 32px 32px;
        box-sizing: border-box;
        background: linear-gradient(135deg, #e9ffe6 0%, #f6fff8 100%);
        display: flex;
        flex-direction: column;
        align-items: stretch;
      }
      h1 {
        color: #1e7f4c;
        margin-bottom: 24px;
        font-size: 2.2rem;
        letter-spacing: 1px;
        text-align: center;
        font-weight: bold;
      }
      .search-input {
        margin-bottom: 20px;
        padding: 10px 14px;
        width: 100%;
        max-width: 400px;
        border: 1.5px solid #1e7f4c;
        border-radius: 8px;
        font-size: 1rem;
        background: #fff;
        color: #1e7f4c;
        transition: border 0.2s;
        outline: none;
        box-shadow: 0 2px 8px #1e7f4c11;
        margin-right: auto;
        margin-left: auto;
        display: block;
      }
      .search-input:focus {
        border-color: #34c759;
        box-shadow: 0 2px 12px #34c75922;
      }
      table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        background: #fff;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 4px 24px #1e7f4c22;
        margin-bottom: 20px;
      }
      th,
      td {
        padding: 14px 10px;
        text-align: center;
        border-bottom: 1px solid #e0f2e9;
        font-size: 1.05rem;
      }
      th {
        background: linear-gradient(90deg, #1e7f4c 80%, #34c759 100%);
        color: #fff;
        font-weight: bold;
        border-bottom: 2px solid #34c759;
      }
      tr:last-child td {
        border-bottom: none;
      }
      tr:nth-child(even) td {
        background: #e9ffe6;
      }
      tr:hover td {
        background: #d4f8e8;
        transition: background 0.2s;
      }
      @media (max-width: 900px) {
        .scroll-container {
          padding: 16px 4px;
        }
        .container {
          flex-direction: column;
        }
        .sidebar {
          min-width: 100vw;
        }
        table,
        th,
        td {
          font-size: 0.95rem;
        }
      }
    </style>
  </head>
  <body>
    <%- include('partials/navbar') %>
    <div class="container" style="margin-top: 20px">
      <div class="sidebar"><%- include('partials/sidebar') %></div>
      <div class="scroll-container">
        <h1>مناقشه الجلسات</h1>
        <input
          type="text"
          id="searchOpenSessions"
          class="search-input"
          placeholder="بحث عن الجلسات المفتوحة"
        />
        <table id="openSessionsTable">
          <thead>
            <tr>
              <th>رقم الجلسه</th>
              <th>تاريخ الجلسه</th>
              <th>اليوم</th>
              <th>وقت الجلسه</th>
              <th>مكان الانعقاد</th>
              <th>مقرر الجلسه</th>
              <th>الموضوع</th>
            </tr>
          </thead>
          <tbody>
            <!-- Open sessions will be dynamically loaded here -->
          </tbody>
        </table>
        <script>
          async function fetchOpenSessions() {
            try {
              const response = await fetch("/api/sessions/open");
              if (response.ok) {
                const data = await response.json();
                const tbody = document.querySelector(
                  "#openSessionsTable tbody"
                );
                tbody.innerHTML = "";
                if (data.data.length === 0) {
                  tbody.innerHTML =
                    '<tr><td colspan="7">لا توجد جلسات مفتوحة</td></tr>';
                  return;
                }
                data.data.forEach((session) => {
                  const tr = document.createElement("tr");
                  tr.innerHTML = `
                <td>${session.sessionNumber}</td>
                <td>${
                  session.date
                    ? new Date(session.date).toISOString().substring(0, 10)
                    : ""
                }</td>
                <td>${session.day}</td>
                <td>${session.time}</td>
                <td>${session.location}</td>
                <td>${session.secretary}</td>
                <td>${session.topic}</td>
              `;
                  tbody.appendChild(tr);
                });
              } else {
                alert("فشل في جلب الجلسات المفتوحة");
              }
            } catch (error) {
              alert("خطأ في الاتصال بالخادم");
            }
          }

          document
            .getElementById("searchOpenSessions")
            .addEventListener("input", async function () {
              const query = this.value.trim();
              try {
                let url = "/api/sessions/search?status=Open";
                if (query) {
                  url += "&sessionNumber=" + encodeURIComponent(query);
                }
                const response = await fetch(url);
                if (response.ok) {
                  const data = await response.json();
                  const tbody = document.querySelector(
                    "#openSessionsTable tbody"
                  );
                  tbody.innerHTML = "";
                  if (data.data.length === 0) {
                    tbody.innerHTML =
                      '<tr><td colspan="7">لا توجد جلسات مطابقة</td></tr>';
                    return;
                  }
                  data.data.forEach((session) => {
                    const tr = document.createElement("tr");
                    tr.innerHTML = `
                <td>${session.sessionNumber}</td>
                <td>${
                  session.date
                    ? new Date(session.date).toISOString().substring(0, 10)
                    : ""
                }</td>
                <td>${session.day}</td>
                <td>${session.time}</td>
                <td>${session.location}</td>
                <td>${session.secretary}</td>
                <td>${session.topic}</td>
              `;
                    tbody.appendChild(tr);
                  });
                } else {
                  alert("فشل في جلب الجلسات");
                }
              } catch (error) {
                alert("خطأ في الاتصال بالخادم");
              }
            });

          // Initial fetch of open sessions
          fetchOpenSessions();
        </script>
      </div>
    </div>
  </body>
</html>
